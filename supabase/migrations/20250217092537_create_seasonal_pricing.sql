-- Create seasonal_pricing table
CREATE TABLE seasonal_pricing (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    monday_price INTEGER NOT NULL CHECK (monday_price >= 0),
    tuesday_price INTEGER NOT NULL CHECK (tuesday_price >= 0),
    wednesday_price INTEGER NOT NULL CHECK (wednesday_price >= 0),
    thursday_price INTEGER NOT NULL CHECK (thursday_price >= 0),
    friday_price INTEGER NOT NULL CHECK (friday_price >= 0),
    saturday_price INTEGER NOT NULL CHECK (saturday_price >= 0),
    sunday_price INTEGER NOT NULL CHECK (sunday_price >= 0),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
    
    -- Add constraint to ensure end_date is after start_date
    CONSTRAINT end_date_after_start_date CHECK (end_date > start_date)
);

-- Add RLS policies
ALTER TABLE seasonal_pricing ENABLE ROW LEVEL SECURITY;

-- Create a policy that allows all operations for authenticated users
CREATE POLICY "Enable all operations for authenticated users"
ON seasonal_pricing
FOR ALL
TO authenticated
USING (true)
WITH CHECK (true);

-- Grant necessary permissions to authenticated users
GRANT ALL ON seasonal_pricing TO authenticated;
